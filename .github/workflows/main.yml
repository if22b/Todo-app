name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - deploy/production

jobs:
  static-code-analysis:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Run SonarQube Analysis
        env:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          docker run \
            -e SONAR_HOST_URL=${{ secrets.SONAR_HOST_URL }} \
            -e SONAR_TOKEN=${{ secrets.SONAR_TOKEN }} \
            -v $(pwd):/usr/src \
            sonarsource/sonar-scanner-cli:5.0.1 \
            -Dsonar.projectKey=my_project_key \
            -Dsonar.sources=. \
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

  security-scan:
    needs: static-code-analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Update dependencies and run Snyk security scan
        run: |
          echo "Updating dependencies..."
          npm install -g npm-check-updates
          ncu -u
          npm install
          npm audit fix
          echo "Running Snyk security scan..."
          npx snyk auth ${{ secrets.SNYK_TOKEN }}
          npx snyk test --all-projects

  tests:
    needs: security-scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Install dependencies
        run: npm install
      - name: Run tests
        run: npm run test
      - name: Code Coverage
        run: npm run test:coverage

  build:
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Docker and Buildx
        uses: docker/setup-buildx-action@v2
      - name: Log in to Docker Hub (for Build and Push)
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      - name: Build Docker image using Buildx
        run: |
          docker buildx build --push -t ${{ secrets.DOCKER_HUB_USERNAME }}/todo-frontend:stable -f Dockerfile .

  deliver:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      - name: Pull the image (for verification or further use)
        run: docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/todo-frontend:stable

  deploy:
    needs: deliver
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Deploy to AWS
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region us-west-2
          aws ecs update-service --cluster my-cluster --service my-service --force-new-deployment
