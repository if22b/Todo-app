name: Main Pipeline

on:
  push:
    branches:
      - main

jobs:
  static-code-analysis:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Run SonarQube Analysis
        env:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          docker run \
            -e SONAR_HOST_URL=${{ secrets.SONAR_HOST_URL }} \
            -e SONAR_TOKEN=${{ secrets.SONAR_TOKEN }} \
            -v $(pwd):/usr/src \
            sonarsource/sonar-scanner-cli:5.0.1 \
            -Dsonar.projectKey=my_project_key \
            -Dsonar.sources=. \
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

  security-scan:
    needs: static-code-analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Update dependencies and run Snyk security scan
        run: |
          echo "Updating dependencies..."
          npm install -g npm-check-updates
          ncu -u
          npm install
          npm audit fix
          echo "Running Snyk security scan..."
          npx snyk auth ${{ secrets.SNYK_TOKEN }}
          npx snyk test --all-projects

  tests:
    needs: security-scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm run test

      - name: Code Coverage
        run: npm run test:coverage

  build:
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker and Buildx
        uses: docker/setup-buildx-action@v2

      - name: Create and use local Buildx builder
        run: |
          docker buildx create --use --name my-local-builder
          docker buildx inspect --bootstrap

      - name: Build Docker image using Buildx
        run: |
          docker buildx build -t my-app:latest --build-arg VUE_APP_API_URL=${{ secrets.BACKEND_EC2_IP }} -f Dockerfile . --load

      - name: List Docker images for verification
        run: docker images

